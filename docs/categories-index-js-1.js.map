{"version":3,"sources":["webpack:///./src/pages/categories/index.js","webpack:///./src/utils/fetch-json.js","webpack:///./src/components/notification/index.js","webpack:///./src/components/sortable-list/index.js"],"names":["Page","async","targetChildNodes","event","target","childNodes","requestData","map","item","id","dataset","weight","indexOf","fetchJson","method","headers","body","JSON","stringify","this","showNotificationMessage","error","console","closest","classList","toggle","initEventListeners","subElements","categoriesContainer","addEventListener","onPointerDown","document","reorderingEvent","messageText","messageType","notificationMessage","NotificationMessage","type","element","style","position","bottom","right","show","response","Promise","all","getCategoriesData","createElement","innerHTML","template","firstElementChild","getSubElements","createCategorieWrap","listContainers","getAllListsContainers","getCategoriesList","url","getRequestLink","requestString","newUrl","URL","searchParams","set","href","data","categoriesMarkup","dataItem","title","join","forEach","items","getCategoriesListItem","sortableList","SortableList","components","append","subcategories","subcategory","wrapper","count","querySelectorAll","reduce","acc","index","destroy","removeEventListener","component","Object","values","params","fetch","toString","err","FetchError","ok","errorText","statusText","json","message","status","Error","constructor","super","window","reason","alert","duration","render","el","firstChild","parent","shownEl","remove","clearTimeout","timerId","setTimeout","clientX","clientY","moveDraggingAt","children","top","firstElementTop","getBoundingClientRect","movePlaceholderAt","length","i","li","draggingElem","offsetHeight","height","scrollIfCloseToWindowEdge","dragStop","className","addItems","add","which","itemElem","preventDefault","dragStart","elementInitialIndex","pointerInitialShift","x","y","placeholderElem","width","offsetWidth","after","onDocumentPointerMove","onDocumentPointerUp","left","scrollBy","documentElement","clientHeight","currentElement","insertBefore","placeholderIndex","replaceWith","dispatchEvent","CustomEvent","bubbles","details","from","to"],"mappings":"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","file":"categories-index-js-1.js","sourcesContent":["import fetchJson from '../../utils/fetch-json.js';\r\n\r\nimport NotificationMessage from '../../components/notification/index.js';\r\nimport SortableList from '../../components/sortable-list/index.js';\r\n\r\nexport default class Page {\r\n  element;\r\n  components = {};\r\n  subElements = {};\r\n  listContainers = {};\r\n\r\n  initEventListeners() {\r\n    this.subElements.categoriesContainer.addEventListener('pointerdown', this.onPointerDown);\r\n    document.addEventListener('sortable-list-reorder', this.reorderingEvent);\r\n  }\r\n\r\n  reorderingEvent = async event => {\r\n    const targetChildNodes = event.target.childNodes;\r\n    // TODO: эти параметры можно удалить, они нам неинтересны\r\n    // const { from, to } = event.detail; //TODO: Как это применить?\r\n\r\n    const requestData = [...targetChildNodes].map(item => {\r\n      const id = item.dataset.id;\r\n      const weight = [...targetChildNodes].indexOf(item) + 1;\r\n      return { id, weight };\r\n    });\r\n\r\n    try {\r\n      await fetchJson(`${process.env.BACKEND_URL}api/rest/subcategories`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestData)\r\n      });\r\n\r\n      this.showNotificationMessage('Category order saved', 'success');\r\n\r\n    } catch (error) {\r\n      this.showNotificationMessage('Category order NOT saved', 'error');\r\n      console.error('something went wrong', error);\r\n    }\r\n  };\r\n\r\n  showNotificationMessage(messageText, messageType) {\r\n    const notificationMessage = new NotificationMessage(messageText, { type: messageType });\r\n\r\n    // TODO: это лучше сделать в CSS. В данном проекте, в отличии от задачника, можно менять все\r\n    notificationMessage.element.style.position = 'fixed';\r\n    notificationMessage.element.style.bottom = `10px`;\r\n    notificationMessage.element.style.right = '10px';\r\n\r\n    notificationMessage.show();\r\n  }\r\n\r\n  onPointerDown = event => {\r\n    if (event.target.closest('.category')) {\r\n      if (!event.target.closest('.categories__sortable-list-item')) {\r\n        const currentElement = event.target.closest('.category');\r\n        currentElement.classList.toggle('category_open');\r\n      }\r\n    }\r\n  };\r\n\r\n  async render() {\r\n    // TODO: почему здесь Promise.all всего с одним элементом в массиве?\r\n    const [response] = await Promise.all([this.getCategoriesData()]);\r\n\r\n    const element = document.createElement('div');\r\n    element.innerHTML = this.template;\r\n    this.element = element.firstElementChild;\r\n\r\n    this.subElements = this.getSubElements(this.element);\r\n\r\n    this.createCategorieWrap(response);\r\n\r\n    this.listContainers = this.getAllListsContainers(this.element);\r\n\r\n    this.getCategoriesList(response);\r\n    this.initEventListeners();\r\n\r\n\r\n    return this.element;\r\n  }\r\n\r\n  get template() {\r\n    return `  \r\n        <div class=\"categories\">\r\n        <div class=\"content__top-panel\">\r\n          <h1 class=\"page-title\">Categories</h1>\r\n        </div>\r\n        <div data-element=\"categoriesContainer\">\r\n            <!-- Render categories menue here -->\r\n        </div>\r\n        </div>\r\n      `;\r\n  }\r\n\r\n  async getCategoriesData() {\r\n    const url = this.getRequestLink('/api/rest/categories');\r\n\r\n    return await fetchJson(url);\r\n  }\r\n\r\n  getRequestLink(requestString) {\r\n    const newUrl = new URL(requestString, `${process.env.BACKEND_URL}`);\r\n\r\n    newUrl.searchParams.set('_sort', 'weight');\r\n    newUrl.searchParams.set('_refs', 'subcategory');\r\n\r\n    return newUrl.href;\r\n  }\r\n\r\n  createCategorieWrap(data = []) {\r\n    const { categoriesContainer } = this.subElements;\r\n    const categoriesMarkup = data\r\n      .map(dataItem => {\r\n        return `\r\n            <div class=\"category category_open\" data-id=\"${dataItem.id}\">\r\n            <header class=\"category__header\">\r\n                ${dataItem.title}\r\n            </header>\r\n            <div class=\"category__body\">\r\n                <div class=\"subcategory-list\">\r\n                    <div class=\"sortable-list\" data-element=\"listContainer\" data-index=\"${dataItem.id}\">\r\n\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    </div>`;\r\n      })\r\n      .join('');\r\n\r\n    categoriesContainer.innerHTML = categoriesMarkup;\r\n  }\r\n\r\n  getCategoriesList(data) {\r\n    // TODO: для чего здесь цикл?\r\n    // можно ли добавить item для SortableList не в теле цикла?\r\n    data.forEach(dataItem => {\r\n      const items = this.getCategoriesListItem(dataItem);\r\n      const sortableList = new SortableList({ items });\r\n\r\n      this.components[dataItem.id] = sortableList; //TODO: Не уверен что правильно реализовал инициализацию компонента SortableList\r\n\r\n      this.listContainers[dataItem.id].append(sortableList.element);\r\n    });\r\n  }\r\n\r\n  getCategoriesListItem(data) {\r\n    const { subcategories } = data;\r\n\r\n    return subcategories.map(subcategory => {\r\n      const wrapper = document.createElement('div');\r\n\r\n      wrapper.innerHTML = `\r\n        <li class=\"categories__sortable-list-item sortable-list__item\" data-grab-handle=\"\" data-id=\"${subcategory.id}\">\r\n            <strong>${subcategory.title}</strong>\r\n            <span><b>${subcategory.count}</b> products</span>\r\n        </li>`;\r\n\r\n      return wrapper.firstElementChild;\r\n    });\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((acc, item) => {\r\n      acc[item.dataset.element] = item;\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\n  getAllListsContainers(element) {\r\n    const elements = element.querySelectorAll('[data-index]');\r\n    return [...elements].reduce((acc, item) => {\r\n      acc[item.dataset.index] = item;\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\n  destroy() {\r\n    const { categoriesContainer } = this.subElements;\r\n\r\n    categoriesContainer.removeEventListener('pointerdown', this.onPointerDown);\r\n\r\n    for (const component of Object.values(this.components)) {\r\n      component.destroy();\r\n    }\r\n  }\r\n}\r\n","// same as fetch, but throws FetchError in case of errors\n// status >= 400 is an error\n// network error / json error are errors\n\nexport default async function(url, params) {\n  let response;\n\n  try {\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\n    response = await fetch(url.toString(), params);\n  } catch(err) {\n    throw new FetchError(response, \"Network error has occurred.\");\n  }\n\n  let body;\n\n  if (!response.ok) {\n    let errorText = response.statusText; // Not Found (for 404)\n\n    try {\n      body = await response.json();\n\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\n    } catch (error) { /* ignore failed body */ }\n\n    let message = `Error ${response.status}: ${errorText}`;\n\n    throw new FetchError(response, body, message);\n  }\n\n  try {\n    return await response.json();\n  } catch(err) {\n    throw new FetchError(response, null, err.message);\n  }\n}\n\nexport class FetchError extends Error {\n  name = \"FetchError\";\n\n  constructor(response, body, message) {\n    super(message);\n    this.response = response;\n    this.body = body;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n\n","export default class NotificationMessage {\r\n\r\n    static shownEl;  \r\n    timerId;\r\n\r\n    constructor(\r\n        message = '', {\r\n        duration = 0,\r\n        type = ''\r\n      } = {}) {\r\n\r\n        this.message = message;\r\n        this.duration = duration;\r\n        this.type = type;\r\n        \r\n        this.render();\r\n    }    \r\n    \r\n    get template () {\r\n        return `<div class=\"notification ${this.type}\" style=\"--value:${this.duration/1000}s\">\r\n                    <div class=\"timer\"></div>\r\n                    <div class=\"inner-wrapper\">\r\n                    <div class=\"notification-header\">${(this.type === 'success') ? \"Успех!\" : \"Ошибка\"}</div>\r\n                    <div class=\"notification-body\">\r\n                        ${this.message}\r\n                    </div>\r\n                    </div>\r\n                </div>`\r\n    }\r\n\r\n    render() {\r\n        const el = document.createElement('div');\r\n        el.innerHTML = this.template;\r\n       \r\n        this.element = el.firstChild;\r\n    }\r\n\r\n    show(parent = document.body) {        \r\n            if (NotificationMessage.shownEl) {\r\n                NotificationMessage.shownEl.remove();\r\n                clearTimeout(this.timerId);\r\n            }\r\n            \r\n            parent.append(this.element);\r\n            NotificationMessage.shownEl = this;\r\n            this.timerId = setTimeout(() => {this.destroy()}, `${this.duration}`);\r\n            \r\n\r\n        }\r\n\r\n    remove() {\r\n        if (this.element) {\r\n        this.element.remove();\r\n        }\r\n    }\r\n\r\n    destroy() {       \r\n        this.remove();\r\n        this.element = null;\r\n    }\r\n\r\n}\r\n","export default class SortableList {\n  element;\n\n  onDocumentPointerMove = ({clientX, clientY}) => {\n    this.moveDraggingAt(clientX, clientY);\n\n    const {firstElementChild, children} = this.element;\n    const {top: firstElementTop} = firstElementChild.getBoundingClientRect();\n    const {bottom} = this.element.getBoundingClientRect();\n\n    if (clientY < firstElementTop) {\n      this.movePlaceholderAt(0);\n    } else if (clientY > bottom) {\n      this.movePlaceholderAt(children.length);\n    } else {\n      for (let i = 0; i < children.length; i++) {\n        const li = children[i];\n\n        // ignore to prevent bugs when dragging between elements\n        if (li !== this.draggingElem) {\n          const {top, bottom} = li.getBoundingClientRect();\n          const {offsetHeight: height} = li;\n\n          if (clientY > top && clientY < bottom) {\n            // inside the element (y-axis)\n            if (clientY < top + height / 2) {\n              // upper half of the element\n              this.movePlaceholderAt(i);\n              break;\n            } else {\n              // lower half of the element\n              this.movePlaceholderAt(i + 1);\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    this.scrollIfCloseToWindowEdge(clientY);\n  };\n\n  onDocumentPointerUp = () => {\n    this.dragStop();\n  };\n\n  constructor({items = []} = {}) {\n    this.items = items;\n\n    this.render();\n  }\n\n  render() {\n    this.element = document.createElement('ul');\n    this.element.className = 'sortable-list';\n\n    this.addItems();\n    this.initEventListeners();\n  }\n\n  initEventListeners() {\n    this.element.addEventListener('pointerdown', event => this.onPointerDown(event));\n  }\n\n  addItems() {\n    // item is a DOM element\n    for (let item of this.items) {\n      item.classList.add('sortable-list__item');\n    }\n\n    this.element.append(...this.items);\n  }\n\n  onPointerDown(event) {\n    if (event.which !== 1) { // must be left-button\n      return false;\n    }\n\n    const itemElem = event.target.closest('.sortable-list__item');\n\n    if (itemElem) {\n      if (event.target.closest('[data-grab-handle]')) {\n        event.preventDefault();\n\n        this.dragStart(itemElem, event);\n      }\n\n      if (event.target.closest('[data-delete-handle]')) {\n        event.preventDefault();\n\n        itemElem.remove();\n      }\n    }\n  }\n\n  dragStart(itemElem, {clientX, clientY}) {\n    this.elementInitialIndex = [...this.element.children].indexOf(itemElem);\n\n    this.pointerInitialShift = {\n      x: clientX - itemElem.getBoundingClientRect().x,\n      y: clientY - itemElem.getBoundingClientRect().y\n    };\n\n    this.draggingElem = itemElem;\n\n    this.placeholderElem = document.createElement('li');\n    this.placeholderElem.className = 'sortable-list__placeholder';\n\n    // itemElem will get position:fixed\n    // so its width will be auto-set to fit the parent container\n    itemElem.style.width = `${itemElem.offsetWidth}px`;\n    itemElem.style.height = `${itemElem.offsetHeight}px`;\n\n    this.placeholderElem.style.width = itemElem.style.width;\n    this.placeholderElem.style.height = itemElem.style.height;\n\n    itemElem.classList.add('sortable-list__item_dragging');\n\n    itemElem.after(this.placeholderElem);\n\n    // move to the end, to be over other list elements\n    this.element.append(itemElem);\n\n    this.moveDraggingAt(clientX, clientY);\n\n    document.addEventListener('pointermove', this.onDocumentPointerMove);\n    document.addEventListener('pointerup', this.onDocumentPointerUp);\n  }\n\n  moveDraggingAt(clientX, clientY) {\n    this.draggingElem.style.left = clientX - this.pointerInitialShift.x + 'px';\n    this.draggingElem.style.top = clientY - this.pointerInitialShift.y + 'px';\n  }\n\n  scrollIfCloseToWindowEdge(clientY) {\n    const scrollingValue = 10;\n    const threshold = 20;\n\n    if (clientY < threshold) {\n      window.scrollBy(0, -scrollingValue);\n    } else if (clientY > document.documentElement.clientHeight - threshold) {\n      window.scrollBy(0, scrollingValue);\n    }\n  }\n\n  movePlaceholderAt(index) {\n    const currentElement = this.element.children[index];\n\n    if (currentElement !== this.placeholderElem) {\n      this.element.insertBefore(this.placeholderElem, currentElement);\n    }\n  }\n\n  dragStop() {\n    const placeholderIndex = [...this.element.children].indexOf(this.placeholderElem);\n\n    // drop element back\n    this.placeholderElem.replaceWith(this.draggingElem);\n    this.draggingElem.classList.remove('sortable-list__item_dragging');\n\n    this.draggingElem.style.left = '';\n    this.draggingElem.style.top = '';\n    this.draggingElem.style.width = '';\n    this.draggingElem.style.height = '';\n\n    document.removeEventListener('pointermove', this.onDocumentPointerMove);\n    document.removeEventListener('pointerup', this.onDocumentPointerUp);\n\n    this.draggingElem = null;\n\n    if (placeholderIndex !== this.elementInitialIndex) {\n      this.element.dispatchEvent(new CustomEvent('sortable-list-reorder', {\n        bubbles: true,\n        details: {\n          from: this.elementInitialIndex,\n          to: placeholderIndex\n        }\n      }));\n    }\n  }\n\n  remove() {\n    this.element.remove();\n    document.removeEventListener('pointermove', this.onDocumentPointerMove);\n    document.removeEventListener('pointerup', this.onDocumentPointerUp);\n  }\n\n  destroy() {\n    this.remove();\n  }\n}\n"],"sourceRoot":""}