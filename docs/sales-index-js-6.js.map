{"version":3,"sources":["webpack:///./src/components/sortable-table/index.js","webpack:///./src/components/range-picker/index.js","webpack:///./src/pages/sales/sales-headers.js","webpack:///./src/pages/sales/index.js","webpack:///./src/utils/fetch-json.js"],"names":["SortableTable","constructor","headersConfig","url","sorted","id","find","item","sortable","order","isSortLocally","step","start","end","clickableRow","this","async","bottom","element","getBoundingClientRect","document","documentElement","clientHeight","loading","data","loadData","update","event","column","target","closest","dataset","newOrder","asc","desc","toggleOrder","append","subElements","arrow","sortLocally","sortOnServer","URL","render","wrapper","createElement","innerHTML","getTable","firstElementChild","getSubElements","renderRows","initEventListeners","searchParams","set","classList","add","fetchJson","remove","addRows","body","getTableRows","rows","childNodes","getTableHeader","map","getHeaderRow","join","title","getHeaderSortingArrow","getTableBody","getTableRow","template","header","addEventListener","onSortClick","onWindowScroll","sortedData","sortData","length","arr","sortType","customSorting","direction","sort","a","b","localeCompare","querySelectorAll","reduce","accum","subElement","removeEventListener","destroy","RangePicker","date","toLocaleString","dateStyle","from","Date","to","isOpen","contains","isRangePicker","close","showDateFrom","selected","formatDate","Promise","resolve","elem","input","selector","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","showDate1","showDate2","setMonth","getMonth","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","value","cellDate","toISOString","selectedFromElem","selectedToElem","showDate","setDate","monthStr","month","table","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles","detail","toLocaleDateString","year","day","Page","initComponents","renderComponents","getTime","rangePicker","sortableTable","getTableUrl","saveComponents","items","Object","keys","forEach","components","component","root","updateComponents","process","values","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","error","message","status","Error","super","window","reason","alert"],"mappings":"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","file":"sales-index-js-6.js","sourcesContent":["import fetchJson from \"../../utils/fetch-json.js\";\n\nconst BACKEND_URL = 'https://course-js.javascript.ru';\n\nexport default class SortableTable {\n  element;\n  subElements = {};\n  data = [];\n  loading = false;\n  step = 20;\n  start = 1;\n  end = this.start + this.step;\n\n  onWindowScroll = async() => {\n    const { bottom } = this.element.getBoundingClientRect();\n    const { id, order } = this.sorted;\n\n    if (bottom < document.documentElement.clientHeight && !this.loading && !this.isSortLocally) {\n      this.start = this.end;\n      this.end = this.start + this.step;\n\n      this.loading = true;\n\n      const data = await this.loadData(id, order, this.start, this.end);\n      this.update(data);\n\n      this.loading = false;\n    }\n  };\n\n  onSortClick = event => {\n    const column = event.target.closest('[data-sortable=\"true\"]');\n    const toggleOrder = order => {\n      const orders = {\n        asc: 'desc',\n        desc: 'asc'\n      };\n\n      return orders[order];\n    };\n\n    if (column) {\n      const { id, order } = column.dataset;\n      const newOrder = toggleOrder(order);\n\n      this.sorted = {\n        id,\n        order: newOrder\n      };\n\n      column.dataset.order = newOrder;\n      column.append(this.subElements.arrow);\n\n      if (this.isSortLocally) {\n        this.sortLocally(id, newOrder);\n      } else {\n        this.sortOnServer(id, newOrder);\n      }\n    }\n  };\n\n  constructor(headersConfig = [], {\n    url = '',\n    sorted = {\n      id: headersConfig.find(item => item.sortable).id,\n      order: 'asc'\n    },\n    isSortLocally = false,\n    step = 20,\n    start = 0,\n    end = start + step,\n    clickableRow = true,\n  } = {}) {\n    this.headersConfig = headersConfig;\n    this.url = new URL(url, BACKEND_URL);\n    this.sorted = sorted;\n    this.isSortLocally = isSortLocally;\n    this.clickableRow = clickableRow;\n    this.step = step;\n    this.start = start;\n    this.end = end;\n    this.render();\n  }\n\n  async render() {\n    const {id, order} = this.sorted;\n    const wrapper = document.createElement('div');\n\n    wrapper.innerHTML = this.getTable();\n\n    const element = wrapper.firstElementChild;\n\n    this.element = element;\n    this.subElements = this.getSubElements(element);\n\n    const data = await this.loadData(id, order, this.start, this.end);\n\n    this.renderRows(data);\n    this.initEventListeners();\n  }\n\n  async loadData(id, order, start = this.start, end = this.end) {\n    this.url.searchParams.set('_sort', id);\n    this.url.searchParams.set('_order', order);\n    this.url.searchParams.set('_start', start);\n    this.url.searchParams.set('_end', end);\n\n    this.element.classList.add('sortable-table_loading');\n\n    const data = await fetchJson(this.url);\n\n    this.element.classList.remove('sortable-table_loading');\n\n    return data;\n  }\n\n  addRows(data) {\n    this.data = data;\n\n    this.subElements.body.innerHTML = this.getTableRows(data);\n  }\n\n  update(data) {\n    const rows = document.createElement('div');\n\n    this.data = [...this.data, ...data];\n    rows.innerHTML = this.getTableRows(data);\n\n    this.subElements.body.append(...rows.childNodes);\n  }\n\n  getTableHeader() {\n    return `<div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\n      ${this.headersConfig.map(item => this.getHeaderRow(item)).join('')}\n    </div>`;\n  }\n\n  getHeaderRow({id, title, sortable}) {\n    const order = this.sorted.id === id ? this.sorted.order : 'asc';\n\n    return `\n      <div class=\"sortable-table__cell\" data-id=\"${id}\" data-sortable=\"${sortable}\" data-order=\"${order}\">\n        <span>${title}</span>\n        ${this.getHeaderSortingArrow(id)}\n      </div>\n    `;\n  }\n\n  getHeaderSortingArrow(id) {\n    const isOrderExist = this.sorted.id === id ? this.sorted.order : '';\n\n    return isOrderExist\n      ? `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\n          <span class=\"sort-arrow\"></span>\n        </span>`\n      : '';\n  }\n\n  getTableBody(data) {\n    return `\n      <div data-element=\"body\" class=\"sortable-table__body\">\n        ${this.getTableRows(data)}\n      </div>`;\n  }\n\n  getTableRows (data) {\n    return data.map(item => {\n      if(this.clickableRow) {\n        return `<a href=\"/products/${item.id}\" class=\"sortable-table__row\">\n          ${this.getTableRow(item, data)}\n        </a>`\n      } else {\n        return `<div href=\"/products/${item.id}\" class=\"sortable-table__row\">\n          ${this.getTableRow(item, data)}\n        </div>`\n      }\n    }\n    ).join('');\n  }\n\n  getTableRow(item) {\n    const cells = this.headersConfig.map(({id, template}) => {\n      return {\n        id,\n        template\n      };\n    });\n\n    return cells.map(({id, template}) => {\n      return template\n        ? template(item[id])\n        : `<div class=\"sortable-table__cell\">${item[id]}</div>`;\n    }).join('');\n  }\n\n  getTable() {\n    return `\n      <div class=\"sortable-table\">\n        ${this.getTableHeader()}\n        ${this.getTableBody(this.data)}\n\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\n\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\n          No products\n        </div>\n      </div>`;\n  }\n\n  initEventListeners() {\n    this.subElements.header.addEventListener('pointerdown', this.onSortClick);\n    document.addEventListener('scroll', this.onWindowScroll);\n  }\n\n  sortLocally(id, order) {\n    const sortedData = this.sortData(id, order);\n\n    this.subElements.body.innerHTML = this.getTableRows(sortedData);\n  }\n\n  async sortOnServer(id, order) {\n    const start = 1;\n    const end = start + this.step;\n    const data = await this.loadData(id, order, start, end);\n\n    this.renderRows(data);\n  }\n\n  renderRows(data) {\n    if (data.length) {\n      this.element.classList.remove('sortable-table_empty');\n      this.addRows(data);\n    } else {\n      this.element.classList.add('sortable-table_empty');\n    }\n  }\n\n  sortData(id, order) {\n    const arr = [...this.data];\n    const column = this.headersConfig.find(item => item.id === id);\n    const {sortType, customSorting} = column;\n    const direction = order === 'asc' ? 1 : -1;\n\n    return arr.sort((a, b) => {\n      switch (sortType) {\n        case 'number':\n          return direction * (a[id] - b[id]);\n        case 'string':\n          return direction * a[id].localeCompare(b[id], 'ru');\n        case 'custom':\n          return direction * customSorting(a, b);\n        default:\n          return direction * (a[id] - b[id]);\n      }\n    });\n  }\n\n  getSubElements(element) {\n    const elements = element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  remove() {\n    this.element.remove();\n    document.removeEventListener('scroll', this.onWindowScroll);\n  }\n\n  destroy() {\n    this.remove();\n    this.subElements = {};\n  }\n}\n","export default class RangePicker {\n  element = null;\n  subElements = {};\n  selectingFrom = true;\n  selected = {\n    from: new Date(),\n    to: new Date()\n  };\n\n  static formatDate (date) {\n    return date.toLocaleString('ru', {dateStyle: 'short'})\n  }\n\n  onDocumentClick = event => {\n    const isOpen = this.element.classList.contains('rangepicker_open');\n    const isRangePicker = this.element.contains(event.target);\n\n    if (isOpen && !isRangePicker) {\n      this.close();\n    }\n  };\n\n  constructor({from = new Date(), to = new Date()} = {}) {\n    this.showDateFrom = new Date(from);\n    this.selected = {from, to};\n\n    this.render();\n  }\n\n  get template () {\n    const from = RangePicker.formatDate(this.selected.from);\n    const to = RangePicker.formatDate(this.selected.to);\n\n    return `<div class=\"rangepicker\">\n      <div class=\"rangepicker__input\" data-elem=\"input\">\n        <span data-elem=\"from\">${from}</span> -\n        <span data-elem=\"to\">${to}</span>\n      </div>\n      <div class=\"rangepicker__selector\" data-elem=\"selector\"></div>\n    </div>`;\n  }\n\n  render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(element);\n\n    this.initEventListeners();\n\n    return Promise.resolve(this.element);\n  }\n\n  getSubElements (element) {\n    const subElements = {};\n\n    for (const subElement of element.querySelectorAll('[data-elem]')) {\n      subElements[subElement.dataset.elem] = subElement;\n    }\n\n    return subElements;\n  }\n\n  initEventListeners () {\n    const {input, selector} = this.subElements;\n\n    document.addEventListener('click', this.onDocumentClick, true);\n    input.addEventListener('click', () => this.toggle());\n    selector.addEventListener('click', event => this.onSelectorClick(event));\n  }\n\n  toggle() {\n    this.element.classList.toggle('rangepicker_open');\n    this.renderDateRangePicker();\n  }\n\n  onSelectorClick({target}) {\n    if (target.classList.contains('rangepicker__cell')) {\n      this.onRangePickerCellClick(target);\n    }\n  }\n\n  close() {\n    this.element.classList.remove('rangepicker_open');\n  }\n\n  renderDateRangePicker() {\n    const showDate1 = new Date(this.showDateFrom);\n    const showDate2 = new Date(this.showDateFrom);\n    const { selector } = this.subElements;\n\n    showDate2.setMonth(showDate2.getMonth() + 1);\n\n    selector.innerHTML = `\n      <div class=\"rangepicker__selector-arrow\"></div>\n      <div class=\"rangepicker__selector-control-left\"></div>\n      <div class=\"rangepicker__selector-control-right\"></div>\n      ${this.renderCalendar(showDate1)}\n      ${this.renderCalendar(showDate2)}\n    `;\n\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\n\n    controlLeft.addEventListener('click', () => this.prev());\n    controlRight.addEventListener('click', () => this.next());\n\n    this.renderHighlight();\n  }\n\n  prev () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\n    this.renderDateRangePicker();\n  }\n\n  next () {\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\n    this.renderDateRangePicker();\n  }\n\n  renderHighlight() {\n    const { from, to } = this.selected;\n\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\n      const { value } = cell.dataset;\n      const cellDate = new Date(value);\n\n      cell.classList.remove('rangepicker__selected-from');\n      cell.classList.remove('rangepicker__selected-between');\n      cell.classList.remove('rangepicker__selected-to');\n\n      if (from && value === from.toISOString()) {\n        cell.classList.add('rangepicker__selected-from');\n      } else if (to && value === to.toISOString()) {\n        cell.classList.add('rangepicker__selected-to');\n      } else if (from && to && cellDate >= from && cellDate <= to) {\n        cell.classList.add('rangepicker__selected-between');\n      }\n    }\n\n    if (from) {\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\n      if (selectedFromElem) {\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\n      }\n    }\n\n    if (to) {\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\n      if (selectedToElem) {\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\n      }\n    }\n  }\n\n  renderCalendar(showDate) {\n    const date = new Date(showDate);\n    const getGridStartIndex = dayIndex => {\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\n      return index + 1;\n    };\n\n    date.setDate(1);\n\n    // text-transform: capitalize\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\n\n    let table = `<div class=\"rangepicker__calendar\">\n      <div class=\"rangepicker__month-indicator\">\n        <time datetime=${monthStr}>${monthStr}</time>\n      </div>\n      <div class=\"rangepicker__day-of-week\">\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\n      </div>\n      <div class=\"rangepicker__date-grid\">\n    `;\n\n    // first day of month starts after a space\n    // * * * 1 2 3 4\n    table += `\n      <button type=\"button\"\n        class=\"rangepicker__cell\"\n        data-value=\"${date.toISOString()}\"\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\n          ${date.getDate()}\n      </button>`;\n\n    date.setDate(2);\n\n    while (date.getMonth() === showDate.getMonth()) {\n      table += `\n        <button type=\"button\"\n          class=\"rangepicker__cell\"\n          data-value=\"${date.toISOString()}\">\n            ${date.getDate()}\n        </button>`;\n\n      date.setDate(date.getDate() + 1);\n    }\n\n    // close the table\n    table += '</div></div>';\n\n    return table;\n  }\n\n  onRangePickerCellClick(target) {\n    const { value } = target.dataset;\n\n    if (value) {\n      const dateValue = new Date(value);\n\n      if (this.selectingFrom) {\n        this.selected = {\n          from: dateValue,\n          to:   null\n        };\n        this.selectingFrom = false;\n        this.renderHighlight();\n      } else {\n        if (dateValue > this.selected.from) {\n          this.selected.to = dateValue;\n        } else {\n          this.selected.to = this.selected.from;\n          this.selected.from = dateValue;\n        }\n\n        this.selectingFrom = true;\n        this.renderHighlight();\n      }\n\n      if (this.selected.from && this.selected.to) {\n        this.dispatchEvent();\n        this.close();\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to)\n      }\n    }\n  }\n\n  dispatchEvent () {\n    this.element.dispatchEvent(new CustomEvent('date-select', {\n      bubbles: true,\n      detail:  this.selected\n    }));\n  }\n\n  remove () {\n    this.element.remove();\n    // TODO: Warning! To remove listener  MUST be passes the same event phase\n    document.removeEventListener('click', this.onDocumentClick, true);\n  }\n\n  destroy() {\n    this.remove();\n    this.element = null;\n    this.subElements = {};\n    this.selectingFrom = true;\n    this.selected = {\n      from: new Date(),\n      to: new Date()\n    };\n\n    return this;\n  }\n}\n","const header = [\r\n  {\r\n    id: 'id',\r\n    title: 'ID',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'user',\r\n    title: 'Client',\r\n    sortable: true,\r\n    sortType: 'string'\r\n  },\r\n  {\r\n    id: 'createdAt',\r\n    title: 'Date',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template: data => {\r\n      const date = new Date(data);\r\n      let options = {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      };\r\n      return `<div class=\"sortable-table__cell\"> ${date.toLocaleDateString('en', options)}</div>`;\r\n    }\r\n  },\r\n  {\r\n    id: 'totalCost',\r\n    title: 'Cost',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template: data => '<div class=\"sortable-table__cell\">$' + data + '</div>'\r\n  },\r\n  {\r\n    id: 'delivery',\r\n    title: 'Status',\r\n    sortable: true,\r\n    sortType: 'string'\r\n  }\r\n];\r\n  \r\nexport default header;\r\n  ","import SortableTable from '../../components/sortable-table/index.js';\r\nimport RangePicker from '../../components/range-picker/index.js';\r\nimport header from './sales-headers.js';\r\n\r\nexport default class Page {\r\n  element;\r\n  subElements = {};\r\n  components = {};\r\n\r\n  render() {\r\n    const element = document.createElement('div');\r\n    element.innerHTML = this.template;\r\n    this.element = element.firstElementChild;\r\n\r\n    this.subElements = this.getSubElements(this.element);\r\n    this.initComponents();\r\n    this.renderComponents();\r\n    this.initEventListeners();\r\n\r\n    return this.element;\r\n  }\r\n\r\n  get template() {\r\n    return `\r\n            <div class=\"sales full-height flex-column\">\r\n            <div class=\"content__top-panel\">\r\n            <h1 class=\"page-title\">Sales</h1>\r\n            <div data-element=\"rangePicker\" class=\"rangepicker\">\r\n                <!-- Rangepicker component -->\r\n            </div>\r\n            </div>\r\n            <div data-elem=\"ordersContainer\" class=\"full-height flex-column\">\r\n            <div data-element=\"sortableTable\" class=\"sortable-table\">\r\n                <!-- Sortable table component -->\r\n            </div>\r\n            </div>\r\n            </div>\r\n        `;\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  initComponents() {\r\n    const to = new Date();\r\n    const from = new Date(to.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n\r\n    const rangePicker = new RangePicker({ from, to });\r\n\r\n    const sortableTable = new SortableTable(header, {\r\n      url: this.getTableUrl(from, to),\r\n      sorted: {\r\n        id: 'createdAt',\r\n        order: 'desc'\r\n      },\r\n      clickableRow: false,\r\n      start: 0,\r\n      step: 30\r\n    });\r\n\r\n    this.saveComponents({ rangePicker, sortableTable });\r\n  }\r\n\r\n  saveComponents(items = {}) {\r\n    Object.keys(items).forEach(item => {\r\n      this.components[item] = items[item];\r\n    });\r\n  }\r\n\r\n  renderComponents() {\r\n    Object.keys(this.components).forEach(component => {\r\n      const root = this.subElements[component];\r\n      const { element } = this.components[component];\r\n\r\n      root.append(element);\r\n    });\r\n  }\r\n\r\n  initEventListeners() {\r\n    this.components.rangePicker.element.addEventListener('date-select', event => {\r\n      const { from, to } = event.detail;\r\n      this.updateComponents(from, to);\r\n    });\r\n  }\r\n\r\n  async updateComponents(from, to) {\r\n    const { sorted, step } = this.components.sortableTable;\r\n    this.components.sortableTable.url = new URL(\r\n      this.getTableUrl(from, to),\r\n      process.env.BACKEND_URL\r\n    );\r\n    await this.components.sortableTable.sortOnServer(sorted.id, sorted.order, 0, step);\r\n  }\r\n\r\n  getTableUrl(from, to) {\r\n    return `api/rest/orders?createdAt_gte=${from.toISOString()}&createdAt_lte=${to.toISOString()}`;\r\n  }\r\n\r\n  destroy() {\r\n    for (const component of Object.values(this.components)) {\r\n      component.destroy();\r\n    }\r\n  }\r\n}\r\n","// same as fetch, but throws FetchError in case of errors\n// status >= 400 is an error\n// network error / json error are errors\n\nexport default async function(url, params) {\n  let response;\n\n  try {\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\n    response = await fetch(url.toString(), params);\n  } catch(err) {\n    throw new FetchError(response, \"Network error has occurred.\");\n  }\n\n  let body;\n\n  if (!response.ok) {\n    let errorText = response.statusText; // Not Found (for 404)\n\n    try {\n      body = await response.json();\n\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\n    } catch (error) { /* ignore failed body */ }\n\n    let message = `Error ${response.status}: ${errorText}`;\n\n    throw new FetchError(response, body, message);\n  }\n\n  try {\n    return await response.json();\n  } catch(err) {\n    throw new FetchError(response, null, err.message);\n  }\n}\n\nexport class FetchError extends Error {\n  name = \"FetchError\";\n\n  constructor(response, body, message) {\n    super(message);\n    this.response = response;\n    this.body = body;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n\n"],"sourceRoot":""}