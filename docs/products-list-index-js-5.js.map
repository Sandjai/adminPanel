{"version":3,"sources":["webpack:///./src/components/sortable-table/index.js","webpack:///./src/pages/products/list/products__header.js","webpack:///./src/components/double-slider/index.js","webpack:///./src/pages/products/list/index.js","webpack:///./src/utils/fetch-json.js"],"names":["SortableTable","constructor","headersConfig","url","sorted","id","find","item","sortable","order","isSortLocally","step","start","end","clickableRow","this","async","bottom","element","getBoundingClientRect","document","documentElement","clientHeight","loading","data","loadData","update","event","column","target","closest","dataset","newOrder","asc","desc","toggleOrder","append","subElements","arrow","sortLocally","sortOnServer","URL","render","wrapper","createElement","innerHTML","getTable","firstElementChild","getSubElements","renderRows","initEventListeners","searchParams","set","classList","add","fetchJson","remove","addRows","body","getTableRows","rows","childNodes","getTableHeader","map","getHeaderRow","join","title","getHeaderSortingArrow","getTableBody","getTableRow","template","header","addEventListener","onSortClick","onWindowScroll","sortedData","sortData","length","arr","sortType","customSorting","direction","sort","a","b","localeCompare","querySelectorAll","reduce","accum","subElement","removeEventListener","destroy","category","DoubleSlider","min","max","formatValue","value","selected","from","to","e","preventDefault","thumbElement","left","right","thumbLeft","shiftX","clientX","dragging","pointerMove","clickUp","innerLeft","innerRight","width","inner","newLeft","parseFloat","thumbRight","style","progress","getValue","newRight","dispatchEvent","CustomEvent","detail","bubbles","markup","acc","nextValue","clickDown","rangeTotal","Math","round","onThumbPointerMove","onThumbPointerUp","floor","Page","filterName","filterStatus","doubleSliderData","filterData","trim","updateTable","components","doubleSlider","initComponents","sortableTable","renderComponents","filter","onFilterInput","onRangeSelect","updatedUrl","createURL","href","minValue","maxValue","process","sliderContainer","productsContainer","next","component","Object","values","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","error","message","status","Error","super","window","reason","alert"],"mappings":"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","file":"products-list-index-js-5.js","sourcesContent":["import fetchJson from \"../../utils/fetch-json.js\";\n\nconst BACKEND_URL = 'https://course-js.javascript.ru';\n\nexport default class SortableTable {\n  element;\n  subElements = {};\n  data = [];\n  loading = false;\n  step = 20;\n  start = 1;\n  end = this.start + this.step;\n\n  onWindowScroll = async() => {\n    const { bottom } = this.element.getBoundingClientRect();\n    const { id, order } = this.sorted;\n\n    if (bottom < document.documentElement.clientHeight && !this.loading && !this.isSortLocally) {\n      this.start = this.end;\n      this.end = this.start + this.step;\n\n      this.loading = true;\n\n      const data = await this.loadData(id, order, this.start, this.end);\n      this.update(data);\n\n      this.loading = false;\n    }\n  };\n\n  onSortClick = event => {\n    const column = event.target.closest('[data-sortable=\"true\"]');\n    const toggleOrder = order => {\n      const orders = {\n        asc: 'desc',\n        desc: 'asc'\n      };\n\n      return orders[order];\n    };\n\n    if (column) {\n      const { id, order } = column.dataset;\n      const newOrder = toggleOrder(order);\n\n      this.sorted = {\n        id,\n        order: newOrder\n      };\n\n      column.dataset.order = newOrder;\n      column.append(this.subElements.arrow);\n\n      if (this.isSortLocally) {\n        this.sortLocally(id, newOrder);\n      } else {\n        this.sortOnServer(id, newOrder);\n      }\n    }\n  };\n\n  constructor(headersConfig = [], {\n    url = '',\n    sorted = {\n      id: headersConfig.find(item => item.sortable).id,\n      order: 'asc'\n    },\n    isSortLocally = false,\n    step = 20,\n    start = 0,\n    end = start + step,\n    clickableRow = true,\n  } = {}) {\n    this.headersConfig = headersConfig;\n    this.url = new URL(url, BACKEND_URL);\n    this.sorted = sorted;\n    this.isSortLocally = isSortLocally;\n    this.clickableRow = clickableRow;\n    this.step = step;\n    this.start = start;\n    this.end = end;\n    this.render();\n  }\n\n  async render() {\n    const {id, order} = this.sorted;\n    const wrapper = document.createElement('div');\n\n    wrapper.innerHTML = this.getTable();\n\n    const element = wrapper.firstElementChild;\n\n    this.element = element;\n    this.subElements = this.getSubElements(element);\n\n    const data = await this.loadData(id, order, this.start, this.end);\n\n    this.renderRows(data);\n    this.initEventListeners();\n  }\n\n  async loadData(id, order, start = this.start, end = this.end) {\n    this.url.searchParams.set('_sort', id);\n    this.url.searchParams.set('_order', order);\n    this.url.searchParams.set('_start', start);\n    this.url.searchParams.set('_end', end);\n\n    this.element.classList.add('sortable-table_loading');\n\n    const data = await fetchJson(this.url);\n\n    this.element.classList.remove('sortable-table_loading');\n\n    return data;\n  }\n\n  addRows(data) {\n    this.data = data;\n\n    this.subElements.body.innerHTML = this.getTableRows(data);\n  }\n\n  update(data) {\n    const rows = document.createElement('div');\n\n    this.data = [...this.data, ...data];\n    rows.innerHTML = this.getTableRows(data);\n\n    this.subElements.body.append(...rows.childNodes);\n  }\n\n  getTableHeader() {\n    return `<div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\n      ${this.headersConfig.map(item => this.getHeaderRow(item)).join('')}\n    </div>`;\n  }\n\n  getHeaderRow({id, title, sortable}) {\n    const order = this.sorted.id === id ? this.sorted.order : 'asc';\n\n    return `\n      <div class=\"sortable-table__cell\" data-id=\"${id}\" data-sortable=\"${sortable}\" data-order=\"${order}\">\n        <span>${title}</span>\n        ${this.getHeaderSortingArrow(id)}\n      </div>\n    `;\n  }\n\n  getHeaderSortingArrow(id) {\n    const isOrderExist = this.sorted.id === id ? this.sorted.order : '';\n\n    return isOrderExist\n      ? `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\n          <span class=\"sort-arrow\"></span>\n        </span>`\n      : '';\n  }\n\n  getTableBody(data) {\n    return `\n      <div data-element=\"body\" class=\"sortable-table__body\">\n        ${this.getTableRows(data)}\n      </div>`;\n  }\n\n  getTableRows (data) {\n    return data.map(item => {\n      if(this.clickableRow) {\n        return `<a href=\"/products/${item.id}\" class=\"sortable-table__row\">\n          ${this.getTableRow(item, data)}\n        </a>`\n      } else {\n        return `<div href=\"/products/${item.id}\" class=\"sortable-table__row\">\n          ${this.getTableRow(item, data)}\n        </div>`\n      }\n    }\n    ).join('');\n  }\n\n  getTableRow(item) {\n    const cells = this.headersConfig.map(({id, template}) => {\n      return {\n        id,\n        template\n      };\n    });\n\n    return cells.map(({id, template}) => {\n      return template\n        ? template(item[id])\n        : `<div class=\"sortable-table__cell\">${item[id]}</div>`;\n    }).join('');\n  }\n\n  getTable() {\n    return `\n      <div class=\"sortable-table\">\n        ${this.getTableHeader()}\n        ${this.getTableBody(this.data)}\n\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\n\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\n          No products\n        </div>\n      </div>`;\n  }\n\n  initEventListeners() {\n    this.subElements.header.addEventListener('pointerdown', this.onSortClick);\n    document.addEventListener('scroll', this.onWindowScroll);\n  }\n\n  sortLocally(id, order) {\n    const sortedData = this.sortData(id, order);\n\n    this.subElements.body.innerHTML = this.getTableRows(sortedData);\n  }\n\n  async sortOnServer(id, order) {\n    const start = 1;\n    const end = start + this.step;\n    const data = await this.loadData(id, order, start, end);\n\n    this.renderRows(data);\n  }\n\n  renderRows(data) {\n    if (data.length) {\n      this.element.classList.remove('sortable-table_empty');\n      this.addRows(data);\n    } else {\n      this.element.classList.add('sortable-table_empty');\n    }\n  }\n\n  sortData(id, order) {\n    const arr = [...this.data];\n    const column = this.headersConfig.find(item => item.id === id);\n    const {sortType, customSorting} = column;\n    const direction = order === 'asc' ? 1 : -1;\n\n    return arr.sort((a, b) => {\n      switch (sortType) {\n        case 'number':\n          return direction * (a[id] - b[id]);\n        case 'string':\n          return direction * a[id].localeCompare(b[id], 'ru');\n        case 'custom':\n          return direction * customSorting(a, b);\n        default:\n          return direction * (a[id] - b[id]);\n      }\n    });\n  }\n\n  getSubElements(element) {\n    const elements = element.querySelectorAll('[data-element]');\n\n    return [...elements].reduce((accum, subElement) => {\n      accum[subElement.dataset.element] = subElement;\n\n      return accum;\n    }, {});\n  }\n\n  remove() {\n    this.element.remove();\n    document.removeEventListener('scroll', this.onWindowScroll);\n  }\n\n  destroy() {\n    this.remove();\n    this.subElements = {};\n  }\n}\n","const header = [\r\n  {\r\n    id: 'images',\r\n    title: 'Image',\r\n    sortable: false,\r\n    template: data => {\r\n      if (data.length > 0) {\r\n        return `\r\n              <div class=\"sortable-table__cell\">\r\n                <img class=\"sortable-table-image\" alt=\"Image\" src=\"${data[0].url}\">\r\n              </div>\r\n            `;\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'title',\r\n    title: 'Name',\r\n    sortable: true,\r\n    sortType: 'string'\r\n  },\r\n  {\r\n    id: 'subcategory',    \r\n    title: 'Category',\r\n    sortable: false,\r\n    sortType: 'string',\r\n    template: data => {\r\n      return `<div class=\"sortable-table__cell\">\r\n       <span data-tooltip='\r\n       <div class=\"sortable-table-tooltip\">\r\n         <span class=\"sortable-table-tooltip__category\">${data.category.title}</span> /\r\n         <b class=\"sortable-table-tooltip__subcategory\">${data.title}</b>\r\n       </div>'>${data.title}</span>\r\n       </div>`;\r\n    }\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    title: 'Quantity',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'price',\r\n    title: 'Price',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template: data => '<div class=\"sortable-table__cell\">$' + data + '</div>'\r\n  },\r\n  {\r\n    id: 'status',\r\n    title: 'Status',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template: data => {\r\n      return `<div class=\"sortable-table__cell\">\r\n            ${data > 0 ? 'Active' : 'Inactive'}\r\n          </div>`;\r\n    }\r\n  }\r\n];\r\n  \r\nexport default header;\r\n  ","export default class DoubleSlider {\r\n    element;\r\n    subElements = {};\r\n    shiftX;\r\n    dragging;\r\n  \r\n    constructor({\r\n      min = 100,\r\n      max = 200,\r\n      formatValue = value => '$' + value,\r\n      selected = {\r\n        from: min,\r\n        to: max\r\n      }\r\n    } = {}) {\r\n      this.min = min;\r\n      this.max = max;\r\n      this.formatValue = formatValue;\r\n      this.selected = selected;\r\n      this.render();\r\n    }\r\n  \r\n    get markup() {\r\n      const { from, to } = this.selected;\r\n      return `\r\n            <div class=\"range-slider\">\r\n                <span data-element=\"from\">${this.formatValue(from)}</span>\r\n                <div data-element=\"inner\" class=\"range-slider__inner\">\r\n                    <span data-element=\"progress\" class=\"range-slider__progress\"></span>\r\n                    <span data-element=\"thumbLeft\" class=\"range-slider__thumb-left\"></span>\r\n                    <span data-element=\"thumbRight\" class=\"range-slider__thumb-right\"></span>\r\n                </div>\r\n                <span data-element=\"to\">${this.formatValue(to)}</span>\r\n            </div>`;\r\n    }\r\n  \r\n    render() {\r\n      const element = document.createElement('div');\r\n      element.innerHTML = this.markup;\r\n      this.element = element.firstElementChild;\r\n  \r\n      this.subElements = this.getSubElements(this.element);\r\n  \r\n      this.initEventListeners();\r\n  \r\n      this.update();\r\n    }\r\n  \r\n    getSubElements(element) {\r\n      const allElements = element.querySelectorAll('[data-element]');\r\n      return [...allElements].reduce((acc, nextValue) => {\r\n        acc[nextValue.dataset.element] = nextValue;\r\n  \r\n        return acc;\r\n      }, {});\r\n    }\r\n  \r\n    initEventListeners() {\r\n      const { thumbLeft, thumbRight } = this.subElements;\r\n  \r\n      thumbLeft.addEventListener('pointerdown', this.clickDown);\r\n      thumbRight.addEventListener('pointerdown', this.clickDown);\r\n    }\r\n  \r\n    clickDown = e => {\r\n      e.preventDefault();\r\n      const thumbElement = e.target;\r\n  \r\n      const { left, right } = thumbElement.getBoundingClientRect();\r\n      if (thumbElement === this.subElements.thumbLeft) {\r\n        this.shiftX = right - e.clientX;\r\n      } else {\r\n        this.shiftX = left - e.clientX;\r\n      }\r\n  \r\n      this.dragging = thumbElement;\r\n  \r\n      this.element.classList.add('range-slider_dragging');\r\n  \r\n      document.addEventListener('pointermove', this.pointerMove);\r\n      document.addEventListener('pointerup', this.clickUp);\r\n    };\r\n  \r\n    pointerMove = e => {\r\n      e.preventDefault();\r\n      const {\r\n        left: innerLeft,\r\n        right: innerRight,\r\n        width\r\n      } = this.subElements.inner.getBoundingClientRect();\r\n  \r\n      if (this.dragging === this.subElements.thumbLeft) {\r\n        let newLeft = (e.clientX - innerLeft + this.shiftX) / width;\r\n  \r\n        if (newLeft < 0) {\r\n          newLeft = 0;\r\n        }\r\n        newLeft *= 100;\r\n        let right = parseFloat(this.subElements.thumbRight.style.right);\r\n  \r\n        if (newLeft + right > 100) {\r\n          newLeft = 100 - right;\r\n        }\r\n  \r\n        this.dragging.style.left = this.subElements.progress.style.left = newLeft + '%';\r\n        this.subElements.from.innerHTML = this.formatValue(this.getValue().from);\r\n      }\r\n  \r\n      if (this.dragging === this.subElements.thumbRight) {\r\n        let newRight = (innerRight - e.clientX - this.shiftX) / width;\r\n        if (newRight < 0) {\r\n          newRight = 0;\r\n        }\r\n        newRight *= 100;\r\n  \r\n        let left = parseFloat(this.subElements.thumbLeft.style.left);\r\n  \r\n        if (left + newRight > 100) {\r\n          newRight = 100 - left;\r\n        }\r\n  \r\n        this.dragging.style.right = this.subElements.progress.style.right = newRight + '%';\r\n        this.subElements.to.innerHTML = this.formatValue(this.getValue().to);\r\n      }\r\n    };\r\n  \r\n    clickUp = e => {\r\n      this.element.classList.remove('range-slider_dragging');\r\n  \r\n      document.removeEventListener('pointermove', this.pointerMove);\r\n      document.removeEventListener('pointerup', this.clickUp);\r\n  \r\n      this.element.dispatchEvent(\r\n        new CustomEvent('range-select', {\r\n          detail: this.getValue(),\r\n          bubbles: true\r\n        })\r\n      );\r\n    };\r\n  \r\n    getValue() {\r\n      const rangeTotal = this.max - this.min;\r\n      const { left } = this.subElements.thumbLeft.style;\r\n      const { right } = this.subElements.thumbRight.style;\r\n  \r\n      const from = Math.round(this.min + parseFloat(left) * 0.01 * rangeTotal);\r\n      const to = Math.round(this.max - parseFloat(right) * 0.01 * rangeTotal);\r\n  \r\n      return { from, to };\r\n    }\r\n  \r\n    remove() {\r\n      this.element.remove();\r\n    }\r\n  \r\n    destroy() {\r\n      this.remove();\r\n      document.removeEventListener('pointermove', this.onThumbPointerMove);\r\n      document.removeEventListener('pointerup', this.onThumbPointerUp);\r\n    }\r\n  \r\n    update() {\r\n      const rangeTotal = this.max - this.min;\r\n      const left = Math.floor(((this.selected.from - this.min) / rangeTotal) * 100) + '%';\r\n      const right = Math.floor(((this.max - this.selected.to) / rangeTotal) * 100) + '%';\r\n  \r\n  \r\n      this.subElements.progress.style.left = left;\r\n      this.subElements.progress.style.right = right;\r\n  \r\n      this.subElements.thumbLeft.style.left = left;\r\n      this.subElements.thumbRight.style.right = right;\r\n    }\r\n  }\r\n  ","import header from './products__header.js'\nimport SortableTable from '../../../components/sortable-table/index.js'\nimport DoubleSlider from '../../../components/double-slider/index.js';\n\nexport default class Page {\n  element;\n  subElements = {};\n  components = {};\n  filterData = {\n    filterName: '',\n    filterStatus: '',\n    doubleSliderData: {\n      from: 0,\n      to: 0\n    }\n  };\n\n  initComponents() {\n    this.components.doubleSlider = new DoubleSlider({ min: 0, max: 4000 });\n    // Init start values of double slider\n    this.filterData.doubleSliderData.from = this.components.doubleSlider.min;\n    this.filterData.doubleSliderData.to = this.components.doubleSlider.max;\n\n    this.components.sortableTable = new SortableTable(header, {\n      url: 'api/rest/products?_embed=subcategory.category'\n    });\n  }\n\n  async render() {\n    const element = document.createElement('div');\n\n    element.innerHTML = this.template;\n    this.element = element.firstElementChild;\n\n    this.subElements = this.getSubElements(this.element);    \n    \n    this.initComponents();\n    await this.renderComponents();\n    this.initEventListeners();\n    return this.element;\n  }\n\n  get template() {\n    return `\n    <div class=\"products-list\">\n      <div class=\"content__top-panel\">\n        <h1 class=\"page-title\">Товары</h1>\n        <a href=\"/products/add\" class=\"button-primary\">Добавить товар</a>\n      </div>\n      <div class=\"content-box content-box_small\">\n      <form data-element=\"filter\" class=\"form-inline\">\n          <div class=\"form-group\">\n            <label class=\"form-label\">Сортировать по:</label>\n            <input type=\"text\" data-element=\"filterName\" class=\"form-control\" placeholder=\"Название товара\">\n          </div>\n          <div class=\"form-group\" data-element=\"sliderContainer\">\n            <label class=\"form-label\">Цена:</label>\n              <!-- //! DoubleSlider -->\n          </div>\n          <div class=\"form-group\">\n            <label class=\"form-label\">Статус:</label>\n            <select class=\"form-control\" data-element=\"filterStatus\">\n              <option value=\"\" selected=\"\">Любой</option>\n              <option value=\"1\">Активный</option>\n              <option value=\"0\">Неактивный</option>\n            </select>\n          </div>\n        </form>\n      </div>\n      <div data-element=\"productsContainer\" class=\"products-list__container\">\n        <!--//! SortableTable-->\n      </div>\n    </div>\n    `;\n  } \n\n  initEventListeners() {\n    const { filter } = this.subElements;\n    const { doubleSlider } = this.components;\n    //const { clearFilterBtn } = this.components.sortableTable.subElements;\n\n    filter.addEventListener('input', this.onFilterInput);\n\n    doubleSlider.element.addEventListener('range-select', this.onRangeSelect);\n\n    //clearFilterBtn.addEventListener('pointerdown', this.clearFilters);\n  }\n\n  onFilterInput = event => {\n    const { filterName, filterStatus } = this.subElements;\n    const target = event.target;\n\n    if (target === filterName) {\n      this.filterData.filterName = target.value.trim();\n    } else if (target === filterStatus) {\n      this.filterData.filterStatus = target.value;\n    }\n\n    this.updateTable();\n  };\n\n  onRangeSelect = event => {\n    const { from, to } = event.detail;\n\n    this.filterData.doubleSliderData.from = from;\n    this.filterData.doubleSliderData.to = to;\n\n    this.updateTable();\n  };\n\n  clearFilters = () => {\n    const { filterName, filterStatus } = this.subElements;\n    const { min, max } = this.components.doubleSlider;\n\n    filterName.value = '';\n    filterStatus.value = '';\n\n    this.filterData.filterName = '';\n    this.filterData.filterStatus = '';\n\n    // TODO: лучше в таких случаях использовать деструкцию\n    this.components.doubleSlider.subElements.from.innerHTML = `$${min}`;\n    this.components.doubleSlider.subElements.to.innerHTML = `$${max}`;\n    this.components.doubleSlider.update();\n\n    this.filterData.doubleSliderData.from = 0;\n    this.filterData.doubleSliderData.to = 4000;\n\n    this.updateTable();\n  };\n\n  async updateTable() {\n    const { sorted, step } = this.components.sortableTable;\n\n    const updatedUrl = this.createURL();\n\n    this.components.sortableTable.url.href = updatedUrl;\n    await this.components.sortableTable.sortOnServer(sorted.id, sorted.order, 0, step);\n  }\n\n  createURL() {\n    const {\n      filterName,\n      filterStatus,\n      doubleSliderData: { from: minValue, to: maxValue }\n    } = this.filterData;\n\n    const url = new URL('api/rest/products?_embed=subcategory.category', process.env.BACKEND_URL);\n\n    url.searchParams.set('price_gte', minValue);\n    url.searchParams.set('price_lte', maxValue);\n\n    if (filterName.trim() !== '') {\n      url.searchParams.set('title_like', filterName);\n    }\n    if (filterStatus != '') {\n      url.searchParams.set('status', filterStatus);\n    }\n\n    return url.href;\n  }\n\n  async renderComponents() {\n    this.subElements.sliderContainer.append(this.components.doubleSlider.element);\n    this.subElements.productsContainer.append(this.components.sortableTable.element);\n  }\n\n\n  getSubElements(element) {\n    const elements = element.querySelectorAll('[data-element]');\n    return [...elements].reduce((acc, next) => {      \n      acc[next.dataset.element] = next;\n      return acc;\n    }, {});\n  }\n\n  remove() {\n    const { filter } = this.subElements;\n    //const { clearFilterBtn } = this.components.sortableTable.subElements;\n    filter.removeEventListener('input', this.onFilterInput);\n    //clearFilterBtn.removeEventListener('pointerdown', this.clearFilters);\n    this.element = null;\n  }\n\n  destroy() {\n    this.remove();\n    for (const component of Object.values(this.components)) {\n      component.destroy();\n    }\n  }\n}\n\n","// same as fetch, but throws FetchError in case of errors\n// status >= 400 is an error\n// network error / json error are errors\n\nexport default async function(url, params) {\n  let response;\n\n  try {\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\n    response = await fetch(url.toString(), params);\n  } catch(err) {\n    throw new FetchError(response, \"Network error has occurred.\");\n  }\n\n  let body;\n\n  if (!response.ok) {\n    let errorText = response.statusText; // Not Found (for 404)\n\n    try {\n      body = await response.json();\n\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\n    } catch (error) { /* ignore failed body */ }\n\n    let message = `Error ${response.status}: ${errorText}`;\n\n    throw new FetchError(response, body, message);\n  }\n\n  try {\n    return await response.json();\n  } catch(err) {\n    throw new FetchError(response, null, err.message);\n  }\n}\n\nexport class FetchError extends Error {\n  name = \"FetchError\";\n\n  constructor(response, body, message) {\n    super(message);\n    this.response = response;\n    this.body = body;\n  }\n}\n\n// handle uncaught failed fetch through\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});\n\n"],"sourceRoot":""}